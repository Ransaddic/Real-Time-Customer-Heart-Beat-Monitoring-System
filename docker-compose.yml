version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  db:
    image: postgres:14
    container_name: heartbeat_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: heartbeat_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres_setup.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env

  producer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: heartbeat_producer
    command: ["/app/wait-for-kafka.sh", "python", "scripts/heartbeat_producer.py"]
    depends_on:
      - kafka
      - db
    env_file:
      - .env

  consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: heartbeat_consumer
    command: ["/app/wait-for-kafka.sh", "python", "scripts/heartbeat_consumer.py"]
    depends_on:
      - kafka
      - db
    env_file:
      - .env

  dashboard:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: heartbeat_dashboard
    command: streamlit run scripts/heartbeat_dashboard.py --server.port=8501 --server.enableCORS=false
    ports:
      - "8501:8501"
    depends_on:
      - db
    env_file:
      - .env

volumes:
  postgres_data:
